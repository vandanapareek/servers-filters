# Multi-stage build for faster local development
FROM golang:1.21-alpine AS builder

# Install build dependencies
RUN apk add --no-cache sqlite gcc musl-dev

# Set working directory
WORKDIR /app

# Copy go mod files first for better caching
COPY go.mod go.sum ./

# Download dependencies (this layer will be cached)
RUN go mod download

# Copy source code
COPY . .

# Build the application
RUN CGO_ENABLED=1 go build -o servers-listing main.go

# Final stage - minimal runtime
FROM alpine:latest

# Install only runtime dependencies
RUN apk add --no-cache sqlite

# Copy binary from builder
COPY --from=builder /app/servers-listing /app/servers-listing
COPY --from=builder /app/data /app/data

# Set working directory
WORKDIR /app

# Expose port
EXPOSE 8080

# Run the application
CMD ["./servers-listing"]
